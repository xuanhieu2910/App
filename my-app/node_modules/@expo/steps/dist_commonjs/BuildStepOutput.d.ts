import { BuildStepContext } from './BuildStepContext.js';
export type BuildStepOutputById = Record<string, BuildStepOutput>;
export type BuildStepOutputProvider = (ctx: BuildStepContext, stepDisplayName: string) => BuildStepOutput;
interface BuildStepOutputProviderParams {
    id: string;
    required?: boolean;
}
interface BuildStepOutputParams extends BuildStepOutputProviderParams {
    stepDisplayName: string;
}
export declare class BuildStepOutput {
    private readonly ctx;
    readonly id: string;
    readonly stepDisplayName: string;
    readonly required: boolean;
    private _value?;
    static createProvider(params: BuildStepOutputProviderParams): BuildStepOutputProvider;
    constructor(ctx: BuildStepContext, { id, stepDisplayName, required }: BuildStepOutputParams);
    get value(): string | undefined;
    set(value: string | undefined): BuildStepOutput;
}
export declare function makeBuildStepOutputByIdMap(outputs?: BuildStepOutput[]): BuildStepOutputById;
export {};
