{"version":3,"file":"BuildStepInput.js","sourceRoot":"","sources":["../src/BuildStepInput.ts"],"names":[],"mappings":"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","sourcesContent":["import { BuildStepContext } from './BuildStepContext.js';\nimport { BuildStepRuntimeError } from './errors.js';\nimport { interpolateWithOutputs } from './utils/template.js';\n\nexport enum BuildStepInputValueTypeName {\n  STRING = 'string',\n  BOOLEAN = 'boolean',\n  NUMBER = 'number',\n}\nexport type BuildStepInputValueType = string | boolean | number;\n\nexport type BuildStepInputById = Record<string, BuildStepInput>;\nexport type BuildStepInputProvider = (ctx: BuildStepContext, stepId: string) => BuildStepInput;\n\ninterface BuildStepInputProviderParams {\n  id: string;\n  allowedValues?: BuildStepInputValueType[];\n  defaultValue?: BuildStepInputValueType;\n  required?: boolean;\n  allowedValueTypeName?: BuildStepInputValueTypeName;\n}\n\ninterface BuildStepInputParams extends BuildStepInputProviderParams {\n  stepDisplayName: string;\n}\n\nexport class BuildStepInput {\n  public readonly id: string;\n  public readonly stepDisplayName: string;\n  public readonly defaultValue?: BuildStepInputValueType;\n  public readonly allowedValues?: BuildStepInputValueType[];\n  public readonly allowedValueTypeName: BuildStepInputValueTypeName;\n  public readonly required: boolean;\n\n  private _value?: BuildStepInputValueType;\n\n  public static createProvider(params: BuildStepInputProviderParams): BuildStepInputProvider {\n    return (ctx, stepDisplayName) => new BuildStepInput(ctx, { ...params, stepDisplayName });\n  }\n\n  constructor(\n    private readonly ctx: BuildStepContext,\n    {\n      id,\n      stepDisplayName,\n      allowedValues,\n      defaultValue,\n      required = true,\n      allowedValueTypeName = BuildStepInputValueTypeName.STRING,\n    }: BuildStepInputParams\n  ) {\n    this.id = id;\n    this.stepDisplayName = stepDisplayName;\n    this.allowedValues = allowedValues;\n    this.defaultValue = defaultValue;\n    this.required = required;\n    this.allowedValueTypeName = allowedValueTypeName;\n  }\n\n  public get value(): BuildStepInputValueType | undefined {\n    const rawValue = this._value ?? this.defaultValue;\n    if (this.required && rawValue === undefined) {\n      throw new BuildStepRuntimeError(\n        `Input parameter \"${this.id}\" for step \"${this.stepDisplayName}\" is required but it was not set.`\n      );\n    }\n    if (typeof rawValue !== this.allowedValueTypeName && rawValue !== undefined) {\n      throw new BuildStepRuntimeError(\n        `Input parameter \"${this.id}\" for step \"${this.stepDisplayName}\" must be of type \"${this.allowedValueTypeName}\".`\n      );\n    }\n\n    if (rawValue === undefined || typeof rawValue === 'boolean' || typeof rawValue === 'number') {\n      return rawValue;\n    } else {\n      return interpolateWithOutputs(rawValue, (path) => this.ctx.getStepOutputValue(path) ?? '');\n    }\n  }\n\n  public get rawValue(): BuildStepInputValueType | undefined {\n    return this._value ?? this.defaultValue;\n  }\n\n  public set(value: BuildStepInputValueType | undefined): BuildStepInput {\n    if (this.required && value === undefined) {\n      throw new BuildStepRuntimeError(\n        `Input parameter \"${this.id}\" for step \"${this.stepDisplayName}\" is required.`\n      );\n    }\n\n    this._value = value;\n    return this;\n  }\n\n  public isValueOneOfAllowedValues(): boolean {\n    const value = this._value ?? this.defaultValue;\n    if (this.allowedValues === undefined || value === undefined) {\n      return true;\n    }\n    return this.allowedValues.includes(value);\n  }\n}\n\nexport function makeBuildStepInputByIdMap(inputs?: BuildStepInput[]): BuildStepInputById {\n  if (inputs === undefined) {\n    return {};\n  }\n  return inputs.reduce((acc, input) => {\n    acc[input.id] = input;\n    return acc;\n  }, {} as BuildStepInputById);\n}\n"]}